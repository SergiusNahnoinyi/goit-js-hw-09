{"version":3,"sources":["js/03-promises.js"],"names":["form","document","querySelector","onFormSubmit","event","preventDefault","delay","step","amount","currentTarget","delayValue","Number","value","stepValue","amountValue","position","createPromise","console","log","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","catch","addEventListener"],"mappings":";AAAA,aAEA,MAAMA,EAAOC,SAASC,cAAc,SAIpC,SAASC,EAAaC,GACpBA,EAAMC,iBACA,MAAA,MAAEC,EAAF,KAASC,EAAT,OAAeC,GAAWJ,EAAMK,cAClCC,IAAAA,EAAaC,OAAOL,EAAMM,OAC1BC,EAAYF,OAAOJ,EAAKK,OACxBE,EAAcH,OAAOH,EAAOI,OAE3B,IAAA,IAAIG,EAAW,EAAGA,GAAYD,EAAaC,GAAY,EAC1DC,EAAcD,EAAUL,GACxBA,GAAcG,EACdI,QAAQC,IAAIH,EAAUL,GAI1B,SAASM,EAAcD,EAAUT,GACzBa,MAAAA,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,QAAQ,CAACC,EAASC,KACpCC,WAAW,KACLN,EACFI,EAAQ,CAAER,SAAAA,EAAUT,MAAAA,IAEpBkB,EAAO,CAAET,SAAAA,EAAUT,MAAAA,KAEpBA,KAIFoB,KAAK,EAAGX,SAAAA,EAAUT,MAAAA,MACjBW,QAAQC,2BAA2BH,QAAeT,SAEnDqB,MAAM,EAAGZ,SAAAA,EAAUT,MAAAA,MAClBW,QAAQC,0BAA0BH,QAAeT,SAlCvDN,EAAK4B,iBAAiB,SAAUzB","file":"03-promises.4a64c2d3.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.currentTarget;\n  let delayValue = Number(delay.value);\n  let stepValue = Number(step.value);\n  let amountValue = Number(amount.value);\n\n  for (let position = 1; position <= amountValue; position += 1) {\n    createPromise(position, delayValue);\n    delayValue += stepValue;\n    console.log(position, delayValue);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"]}